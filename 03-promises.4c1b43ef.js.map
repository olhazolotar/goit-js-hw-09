{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/BH,EAAKC,KAAKG,iBAAiB,UAe3B,SAAsBC,GAClBA,EAAMC,iBAQN,IANA,IAAIC,EAAaC,OAAOR,EAAKC,KAAKQ,SAASC,MAAMC,OAC7CC,EAAYJ,OAAOR,EAAKC,KAAKQ,SAASI,KAAKF,OAC3CG,EAASN,OAAOR,EAAKC,KAAKQ,SAASK,OAAOH,OAE1CI,EAAQR,EAEHS,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAAG,EAClBA,EACSD,EAvBrB,IAAIE,SAAQ,SAACC,EAAUR,GAC1B,IAAMS,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACHH,EACAI,QAAQ,CAACL,WAAUR,UAEnBc,OAAO,CAACN,WAAUR,YAEvBA,OAgBGe,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUR,EAAKgB,EAALhB,MAC9BZ,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANnB,EAAM,UAC5DoB,OAAM,SAAAJ,G,IAAGR,EAAQQ,EAARR,SAAUR,EAAKgB,EAALhB,MACpBZ,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAfX,EAAS,QAAYW,OAANnB,EAAM,UAEpDK,GAASH,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n    return new Promise((position, delay) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({position, delay});\n            } else {\n                reject({position, delay});\n            }\n        }, delay);\n    });\n}\n\nfunction onFormSubmit(event) {\n    event.preventDefault();\n\n    let firstDelay = Number(refs.form.elements.delay.value);\n    let delayStep = Number(refs.form.elements.step.value);\n    let amount = Number(refs.form.elements.amount.value);\n\n    let delay = firstDelay;\n    \n    for (let i = 1; i <= amount; i += 1) {\n        let position = i;\n        createPromise(position, delay)\n             .then(({ position, delay }) => {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}).catch(({ position, delay }) => {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n})\n        delay += delayStep;\n    };    \n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","addEventListener","event","preventDefault","firstDelay","Number","elements","delay","value","delayStep","step","amount","delay2","i","Promise","position","shouldResolve","Math","random","setTimeout","resolve","reject","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.4c1b43ef.js.map"}